worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Enhanced logging
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log debug;

    sendfile on;
    keepalive_timeout 65;

    # Increase timeouts for long-running downloads
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    upstream backend {
        server 127.0.0.1:8001;
    }

    upstream frontend {
        server 127.0.0.1:3000;
    }

    server {
        listen 8000 default_server;
        server_name _;
        
        # Frontend static files
        location /_next/static/ {
            alias /app/frontend/.next/static/;
            expires 365d;
            access_log off;
            add_header Cache-Control "public, no-transform";
        }

        location /public/ {
            alias /app/frontend/public/;
            expires 365d;
            access_log off;
            add_header Cache-Control "public, no-transform";
        }

        # API routes with proper error handling
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_redirect off;
            
            # Error handling
            proxy_intercept_errors on;
            error_page 404 =404 /api/404;
            error_page 500 502 503 504 =500 /api/500;
        }

        # Health check endpoint
        location = /health {
            proxy_pass http://backend/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_cache_bypass $http_upgrade;
        }

        # Downloads directory
        location /downloads/ {
            alias /app/backend/downloads/;
            add_header Content-Disposition "attachment";
            add_header Cache-Control "no-cache";
        }

        # All other routes go to Next.js
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
        }
    }
} 